#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var child_process_1 = require("child_process");
var tmp_1 = require("tmp");
var semver_1 = require("semver");
var fs_1 = require("fs");
var path = require("path");
// check the correct version of the NPM is installed
var output = child_process_1.execSync('npm --version').toString();
if (semver_1.lt(output, '5.0.0')) {
    console.log('To create a workspace you must have NPM >= 5.0.0 installed.');
    process.exit(1);
}
// check that the workspace name is passed in
if (process.argv.length < 3) {
    console.error('Please provide a project name (e.g., create-nx-workspace nrwl-proj');
    process.exit(1);
}
// creating the sandbox
console.log('Creating a sandbox with the CLI and Nx Schematics...');
var tmpDir = tmp_1.dirSync().name;
var nxVersion = JSON.parse(fs_1.readFileSync(path.join(path.dirname(__dirname), 'package.json'), 'UTF-8')).version;
fs_1.writeFileSync(path.join(tmpDir, 'package.json'), JSON.stringify({
    dependencies: {
        '@nrwl/schematics': nxVersion,
        '@angular/cli': "file:" + path.join(path.dirname(__dirname), 'src', 'collection', 'application', 'files', '__directory__', '.angular_cli.tgz'),
        '@angular-devkit/core': '^0.0.28'
    }
}));
child_process_1.execSync('npm install --silent', { cwd: tmpDir, stdio: [0, 1, 2] });
var ɵ0 = function (a) { return "\"" + a + "\""; };
exports.ɵ0 = ɵ0;
// creating the app itself
var args = process.argv
    .slice(2)
    .map(ɵ0)
    .join(' ');
console.log("ng new " + args + " --collection=@nrwl/schematics");
child_process_1.execSync(path.join(tmpDir, 'node_modules', '.bin', 'ng') + " new " + args + " --collection=@nrwl/schematics", {
    stdio: [0, 1, 2]
});
